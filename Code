#include <iostream>
#include <cstdlib>
#include <vector>

void QuickSort(std::vector<int>& array, int left, int right) {
    int l = left;
    int r = right;
    int sz = r - l + 1;
    int random_index = std::rand() % sz + l;
    int median = array[random_index];
    do {
        while (array[l] < median) l++;
        while (array[r] > median) r--;
        if (l <= r) {
            std::swap(array[l++], array[r--]);
        }
    } while (l < r);

    if (left < r) {
        QuickSort(array, left, r);
    }
    if (l < right) {
        QuickSort(array, l, right);
    }
}

int main() {
    std::ios_base::sync_with_stdio(false);
    std::cin.tie(nullptr);
    std::cout.tie(nullptr);

    int n;
    std::cin >> n;
    std::vector<int> array(n);

    for (int i = 0; i < n; i++) {
        std::cin >> array[i];
    }

    QuickSort(array, 0, n - 1);

    for (int i = 0; i < n; i++) {
        std::cout << array[i] << " ";
    }
}
